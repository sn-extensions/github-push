{"version":3,"sources":["app.js"],"names":["angular","module","HomeCtrl","$rootScope","$scope","$timeout","formData","loading","pushStatus","componentRelay","ComponentRelay","targetWindow","window","onReady","defaultHeight","streamContextItem","item","note","repos","loadRepoDataForCurrentNote","token","getComponentDataValueForKey","onTokenSet","submitToken","setComponentDataValueForKey","gh","GitHub","me","getUser","loadingRepos","listRepos","err","alert","noteData","savedNote","uuid","noteFileExtension","fileExtension","noteFileDirectory","fileDirectory","selectRepoWithName","repoName","defaultRepo","defaultFileExtension","defaultFileDirectory","name","selectedRepo","filter","repo","didSelectRepo","selectedRepoObject","getRepo","owner","login","setDataForNote","hasDefaultRepo","key","value","notesData","sanitizeFileDirectory","$directory","replace","pushChanges","$event","target","blur","message","commitMessage","content","title","fileName","writeFile","encode","logout","clearComponentData","setSize","$$ngIsClass","controller"],"mappings":"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","file":"app.js","sourcesContent":["'use strict';\n\nangular.module('app', []);\n;class HomeCtrl {\n  constructor($rootScope, $scope, $timeout) {\n\n    $scope.formData = {\n      loading: true,\n      pushStatus: \"Push Changes\"\n    };\n\n    let componentRelay = new ComponentRelay({\n      targetWindow: window,\n      onReady: function() {\n        $scope.formData.loading = false;\n        $scope.onReady();\n      },\n    });\n\n    const defaultHeight = 60;\n\n    componentRelay.streamContextItem(function(item) {\n      $timeout(function() {\n        $scope.note = item;\n        if ($scope.repos) {\n          $scope.loadRepoDataForCurrentNote();\n        }\n      })\n    });\n\n    $scope.onReady = function() {\n      $scope.token = componentRelay.getComponentDataValueForKey(\"token\");\n      if ($scope.token) {\n        $scope.onTokenSet();\n      }\n    }\n\n    $scope.submitToken = function() {\n      $scope.token = $scope.formData.token;\n      componentRelay.setComponentDataValueForKey(\"token\", $scope.token);\n      $scope.onTokenSet();\n    }\n\n    $scope.onTokenSet = function() {\n      $scope.gh = new GitHub({\n        token: $scope.token\n      });\n\n      const me = $scope.gh.getUser();\n      $scope.formData.loadingRepos = true;\n\n      me.listRepos(function(err, repos) {\n        $timeout(function() {\n          $scope.formData.loadingRepos = false;\n          if (err) {\n            alert(\"An error occurred with the GitHub Push extension. Make sure your GitHub token is valid and try again.\")\n            return;\n          }\n          $scope.repos = repos;\n          if ($scope.note) {\n            $scope.loadRepoDataForCurrentNote();\n          }\n        });\n      });\n    }\n\n    $scope.loadRepoDataForCurrentNote = function() {\n      const noteData = componentRelay.getComponentDataValueForKey(\"notes\") || {};\n      const savedNote = noteData[$scope.note.uuid];\n\n      if (savedNote) {\n        // per note preference\n        $scope.noteFileExtension = savedNote.fileExtension;\n        $scope.noteFileDirectory = savedNote.fileDirectory;\n        $scope.selectRepoWithName(savedNote.repoName);\n      } else {\n        // default pref\n        const defaultRepo = componentRelay.getComponentDataValueForKey(\"defaultRepo\");\n        if (defaultRepo) {\n          $scope.selectRepoWithName(defaultRepo);\n        }\n      }\n\n      $scope.defaultFileExtension = componentRelay.getComponentDataValueForKey(\"defaultFileExtension\");\n      $scope.formData.fileExtension = $scope.noteFileExtension || $scope.defaultFileExtension || \"txt\";\n\n      $scope.defaultFileDirectory = componentRelay.getComponentDataValueForKey(\"defaultFileDirectory\");\n      $scope.formData.fileDirectory = $scope.noteFileDirectory || $scope.defaultFileDirectory || \"\";\n    }\n\n    $scope.selectRepoWithName = function(name) {\n      $scope.formData.selectedRepo = $scope.repos.filter(function(repo){\n        return repo.name === name;\n      })[0];\n      $scope.didSelectRepo();\n    }\n\n    $scope.didSelectRepo = function() {\n      const repo = $scope.formData.selectedRepo;\n      $scope.selectedRepoObject = $scope.gh.getRepo(repo.owner.login, repo.name);\n\n      // save this as default repo for this note\n      $scope.setDataForNote(\"repoName\", repo.name);\n\n      // save this as default repo globally\n      if (!$scope.hasDefaultRepo) {\n        componentRelay.setComponentDataValueForKey(\"defaultRepo\", repo.name);\n        $scope.hasDefaultRepo = true;\n      }\n    }\n\n    $scope.setDataForNote = function(key, value) {\n      const notesData = componentRelay.getComponentDataValueForKey(\"notes\") || {};\n      const noteData = notesData[$scope.note.uuid] || {};\n      /**\n       * Skip updating the component data if the current value and the new value for the key are the same.\n       * This will prevent spamming the postMessage API with the same message, which causes high CPU usage.\n       */\n      if (noteData[key] === value) {\n        return;\n      }\n      noteData[key] = value;\n      notesData[$scope.note.uuid] = noteData;\n      componentRelay.setComponentDataValueForKey(\"notes\", notesData);\n    }\n\n    $scope.sanitizeFileDirectory = function($directory) {\n      // if no directory is given, then push to root.\n      if (!$directory) {\n        return '';\n      }\n\n      // try to ensure they haven't attempted any funny business with escape strings by turning\n      // any backslashes into forward slashes - then replace any duplicate slashes with a single\n      // slash.\n      return $directory = $directory\n        // make sure the last symbol is a '/'\n        .replace(/[/]*$/g, '/')\n        // make sure there are no escaping slashes.\n        .replace(/\\\\/g, '/')\n        // make sure there are no double '//'.\n        .replace(/\\/\\//g, '/')\n        // make sure the directory does not start with\n        // a '/'.\n        .replace(/^\\/+/g, '');\n    }\n\n    $scope.pushChanges = function($event) {\n      $event.target.blur();\n      const message = $scope.formData.commitMessage || `Updated note '${$scope.note.content.title}'`;\n\n      const fileExtension = $scope.formData.fileExtension;\n      const fileDirectory = $scope.formData.fileDirectory;\n\n      if (!$scope.defaultFileExtension) {\n        // set this as default\n        componentRelay.setComponentDataValueForKey(\"defaultFileExtension\", fileExtension);\n        $scope.defaultFileExtension = fileExtension;\n      }\n\n      if (fileExtension !== $scope.noteFileExtension) {\n        // set this ext for this note\n        $scope.setDataForNote(\"fileExtension\", fileExtension);\n        $scope.noteFileExtension = fileExtension;\n      }\n\n      if (!$scope.defaultFileDirectory) {\n        // set this as default\n        componentRelay.setComponentDataValueForKey(\"defaultFileDirectory\", fileDirectory);\n        $scope.defaultFileDirectory = fileDirectory;\n      }\n\n      if (fileDirectory !== $scope.noteFileDirectory) {\n        // set this directory for the note\n        $scope.setDataForNote(\"fileDirectory\", fileDirectory);\n        $scope.noteFileDirectory = fileDirectory;\n      }\n\n      const fileName = $scope.sanitizeFileDirectory(fileDirectory) + $scope.note.content.title + \".\" + fileExtension;\n\n      $scope.formData.pushStatus = \"Pushing...\";\n      $scope.selectedRepoObject.writeFile(\"master\", fileName, message, {encode: true}, function(err) {\n        $timeout(function(){\n          if (!err) {\n            $scope.formData.commitMessage = \"\";\n            $scope.formData.pushStatus = \"Success!\";\n            $timeout(function() {\n              $scope.formData.pushStatus = \"Push Changes\";\n            }, 1500);\n          } else {\n            alert(\"Something went wrong trying to push your changes.\", + err);\n          }\n        });\n      });\n    }\n\n    $scope.logout = function() {\n      componentRelay.clearComponentData();\n      $scope.hasDefaultRepo = null;\n      $scope.defaultFileExtension = null;\n      $scope.defaultFileDirectory = null;\n      $scope.noteFileExtension = null;\n      $scope.noteFileDirectory = null;\n      $scope.selectedRepo = null;\n      $scope.repos = null;\n      $scope.token = null;\n    }\n\n    componentRelay.setSize(\"100%\", defaultHeight);\n  }\n}\n\n// required for FireFox\nHomeCtrl.$$ngIsClass = true;\n\nangular.module('app').controller('HomeCtrl', HomeCtrl);\n"]}